name: API Test with Postman Using Newman CLI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'
jobs:
  automated-api-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: teamproject
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: MeetingScheduler
          MYSQL_PASSWORD: testtest123
          MYSQL_ROOT_PASSWORD: testtest123
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3



    steps:
      - uses: actions/checkout@v4

      - name: Install MySQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client


      - name: Test MySQL Connection
        run: |
          echo "Testing connection to MySQL..."
          mysql -h 127.0.0.1 -u root -ptesttest123 -e "SHOW DATABASES;"

      - name: Set Active Profile
        run: echo "SPRING_PROFILES_ACTIVE=test" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Set Active Profile
        run: echo "SPRING_PROFILES_ACTIVE=test" >> $GITHUB_ENV

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h "127.0.0.1" --user="root" --password="testtest123" --silent; then
              echo "MySQL is ready!";
              break;
            fi
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Start Application
        run: |
          nohup java -jar target/teamproject-0.0.1-SNAPSHOT.jar &
        env:
          SPRING_PROFILES_ACTIVE: test
          SERVER_PORT: 8080
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: MeetingScheduler
          DB_USER: root
          DB_PASSWORD: testtest123

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/postman/collections/API V1.json" -e "39099252-f84fc76a-d975-4d60-8cb3-34b77bcff2a4" --integration-id "171495-${{ github.run_id }}"
